useDynLib(phylolm, .registration = TRUE)

exportPattern("^[[:alpha:]]+")

import(ape)
import(future.apply)

importFrom("graphics", "abline", "axis", "barplot", "layout", "plot")
importFrom("stats", "AIC", "add.scope", "binomial", "coef",
             "delete.response", "drop.scope", "fitted", "formula", "glm",
             "logLik", "model.frame", "model.matrix", "model.response",
             "optim", "pnorm", "poisson", "printCoefmat", "pt",
             "quantile", "reorder", "rnorm", "runif", "sd", "terms",
             "var", "nobs")
importFrom("graphics", "hist", "mtext", "points")
importFrom("stats", "chisq.test", "optimize", "pbeta")
importFrom("utils", "flush.console")

S3method(AIC,logLik.phyloglm)
S3method(AIC,logLik.phylolm)
S3method(AIC, phyloglm)
S3method(AIC, phylolm)
S3method(extractAIC, phylolm)
S3method(logLik, phyloglm)
S3method(logLik, phylolm)
S3method(nobs, phylolm)
S3method(plot, OUshifts)
S3method(plot, phyloglm)
S3method(plot, phylolm)
S3method(predict, phylolm)
S3method(print, logLik.phyloglm)
S3method(print, logLik.phylolm)
S3method(print, phyloglm)
S3method(print, phylolm)
S3method(print, summary.phyloglm)
S3method(print, summary.phylolm)
S3method(residuals, phyloglm)
S3method(residuals, phylolm)
S3method(summary, phyloglm)
S3method(summary, phylolm)
S3method(vcov, phyloglm)
S3method(vcov, phylolm)
